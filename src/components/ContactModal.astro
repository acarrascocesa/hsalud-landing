---
---

<div class="contact-modal" id="contactModal" role="dialog" aria-modal="true" aria-hidden="true" aria-labelledby="contactTitle">
  <div class="backdrop" data-close-contact aria-hidden="true"></div>
  <div class="dialog">
    <button class="close" aria-label="Cerrar" data-close-contact>×</button>
    <h3 id="contactTitle" class="h3-title">Contactar Ventas</h3>
    <p class="lead">Déjanos tus datos y nos pondremos en contacto.</p>

    <form id="contactForm" name="contact" method="POST" action="/api/contact">

      <div class="grid">
        <label class="field">
          <span>Nombre</span>
          <input type="text" name="name" required />
        </label>
        <label class="field">
          <span>Email</span>
          <input type="email" name="email" required />
        </label>
      </div>

      <label class="field">
        <span>Teléfono (opcional)</span>
        <input type="tel" name="phone" />
      </label>

      <label class="field">
        <span>Mensaje</span>
        <textarea name="message" rows="4" placeholder="Cuéntanos sobre tu clínica"></textarea>
      </label>

      <div class="actions">
        <button type="submit" class="button button-primary">Enviar</button>
        <button type="button" class="button" data-close-contact>Cancelar</button>
      </div>
      <div class="msg" id="contactMsg" role="status" aria-live="polite"></div>
    </form>
  </div>
</div>

<style lang="scss">
.contact-modal[aria-hidden="true"]{ display: none; }
.contact-modal{
  position: fixed; inset: 0; z-index: 1000;
  .backdrop{ position: absolute; inset: 0; background: rgba(0,0,0,0.4); }
  .dialog{
    position: relative; z-index: 1; max-width: 520px; margin: 8vh auto; background: var(--white);
    border: 1px solid rgba(0,0,0,0.06); border-radius: 12px; box-shadow: 0 12px 48px rgba(0,0,0,0.18);
    padding: 20px; 
  }
  .close{ position: absolute; right: 10px; top: 8px; border: none; background: transparent; font-size: 1.6rem; cursor: pointer; color: var(--text-secondary); }
  .lead{ color: var(--text-secondary); margin-top: 4px; margin-bottom: 12px; }
  .grid{ display: grid; grid-template-columns: 1fr 1fr; gap: 10px; }
  .field{ display: flex; flex-direction: column; gap: 6px; }
  .field span{ font-size: .95rem; color: var(--text-secondary); }
  input, textarea{ border: 1px solid rgba(0,0,0,0.12); border-radius: 8px; padding: 10px 12px; font: inherit; }
  input:focus, textarea:focus{ outline: none; border-color: var(--primary); box-shadow: 0 0 0 2px rgba(59,124,114,0.12); }
  .actions{ display: flex; gap: 10px; justify-content: flex-end; margin-top: 12px; }
  .hidden{ display: none; }
  .msg{ margin-top: 10px; font-size: .95rem; }

  @media (max-width: 700px){ .grid{ grid-template-columns: 1fr; } }
}
</style>

<script>
  const modal = document.getElementById('contactModal');
  function openContact(){ modal?.setAttribute('aria-hidden', 'false'); }
  function closeContact(){ modal?.setAttribute('aria-hidden', 'true'); }

  document.addEventListener('click', (e) => {
    const t = e.target;
    if (!(t instanceof Element)) return;
    if (t.matches('[data-open-contact]')) { e.preventDefault(); openContact(); }
    if (t.matches('[data-close-contact]')) { e.preventDefault(); closeContact(); }
  });

  window.openContact = openContact;
  window.closeContact = closeContact;

  // AJAX submit to /api/contact for VPS (no Netlify)
  const form = document.getElementById('contactForm') as HTMLFormElement | null;
  const msg = document.getElementById('contactMsg');
  form?.addEventListener('submit', async (ev) => {
    ev.preventDefault();
    if (!form) return;
    const data = new FormData(form);
    try{
      const res = await fetch(form.action, { method: 'POST', body: data });
      if(res.ok){
        msg && (msg.textContent = 'Gracias. Hemos recibido tu mensaje.');
        form.reset();
      } else {
        msg && (msg.textContent = 'No se pudo enviar. Intenta de nuevo.');
      }
    }catch{
      msg && (msg.textContent = 'No se pudo enviar. Verifica tu conexión e intenta nuevamente.');
    }
  });
</script>
